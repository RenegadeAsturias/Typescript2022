
Async Await

const pokemon = {}
pokemon.name = 'Pikachu';
console.log(pokemon.name);
pokemon.name = 'Raichu';
console.log(pokemon.name);

async function searchPokemon(){
	const response = await fetch('https://pokeapi.co/api/v2/pokemon/25/') // Ahora 'fetch' me devuelve una promesa
	console.log(response);
	const pokemon = await response.json();
	console.log(pokemon);
	renderPokemon(pokemon.sprites.front_default);
}
searchPokemon();

*****************************************

// La respuesta, el objeto : 'response' 
// tiene una propiedad 'ok' que determina si la petición ha funcionado ok.

async function searchPokemon(){
	const response = await fetch('https://pokeapi.co/api/v2/pokemon/25/') // Ahora 'fetch' me devuelve una promesa
	console.log(ok);
	if(response.ok) {
		console.log(response);
		const pokemon = await response.json();
		console.log(pokemon);
		renderPokemon(pokemon.sprites.front_default);
	}
}
searchPokemon();

*****************************************

function buy(thingToBuy, time = 2000) {
	return new Promise((resolve, reject) => {
		setTimeout(()=>{
			console.log(`${thingToBuy} comprado!`);
			resolve(`${thingToBuy} comprado!`);
		}, time)
	}
}

// Para utiliar 'await' es obligatorio que la función sea asíncrona
// Cuando declaramos una función Asíncrona devulve una promesa!
const shopping = async() => {
	const carrito = [];
	const fruta = await buy('fruta');
	const verduras = await buy('verduras');
	const carne = await buy('carne');
	const granos = await buy('granos');
	carrito.push(fruta, verduras, carne, granos);
	return carrito;
}

shopping()
.then((carrito)=>{
	console.log(carrito.toString());
}


*****************************************

// Queremos quitar el '.then' del ejemplo anterior
// Primero creamos una función que se auto ejecute

(async ()=> {
	const shopping = async() => {
		const carrito = [];
		const fruta = await buy('fruta');
		const verduras = await buy('verduras');
		const carne = await buy('carne');
		const granos = await buy('granos');
		carrito.push(fruta, verduras, carne, granos);

        // Mucho ojo que la instrucción 'await' detiene el código que está por debajo
        let letras = ['a','b','c','d','e','f','g','h','i'];
        for(const letra of letras){
            console.log("Letra: "+letra);
        }

		return carrito;
	}
	const carrito = await shopping();
	console.log(carrito.toString());
})()

let numeros = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];
for(const num of numeros){
    console.log("Número: "+num);
}

*****************************************

const all = async ()=> {
	console.time();
	const carrito = await Promise.all([
		buy('fruta',5000),
		buy('verduras',5000),
		buy('carne',5000),
		buy('granos',5000),
	])
	console.timeEnd();
	console.log(carrito.toString()); 
}
all();